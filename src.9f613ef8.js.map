{"version":3,"sources":["../src/st/st.ts","../src/vdom/tsx.ts","../src/vdom/dom.ts","../src/vdom/render.ts","../src/matchRouteRegistrations.ts","../src/tokenizePath.ts","../src/route.ts","routes.ts","classes/Color.ts","function/Theme.ts","../src/function/joinClassNames.tsx","../src/function/camelToKebabCase.ts","../src/function/getCssAsText.ts","../src/render.ts","../src/createStyleNode.ts","../src/constant.ts","../src/jss.ts","../src/makeAnimation.ts","../src/makeFont.ts","../src/makeStyles.ts","function/makeStyles.ts","component/topbar/Button.tsx","router/push.ts","router/replace.ts","router/back.ts","router/forward.ts","router/history.ts","component/Logo.tsx","component/topbar/Dropdown.tsx","function/Children.ts","component/topbar/Menu.tsx","component/topbar/MenuItem.tsx","component/topbar/TopBar.tsx","component/Footer.tsx","page/MainPage.tsx","RouteList.tsx","index.tsx"],"names":["window","state","st","filterComments","children","filter","child","node","attributes","type","onUpdateFn","callback","this","update","dom","hasElNamespace","domElement","namespaceURI","hasSvgNamespace","parentElement","createElementOrElements","virtualNode","parentDomElement","Array","isArray","createChildElements","createElement","createTextNode","newEl","toUpperCase","document","createElementNS","setAttributes","appendChild","$onMount","text","toString","virtualChildren","i","length","virtualChild","push","setAttribute","name","value","current","startsWith","eventName","substring","toLowerCase","capturePos","indexOf","doCapture","addEventListener","join","setAttributeNS","XLINK_ATTRIBUTE_NAME","replace","propNames","Object","keys","style","forceNative","attrNames","render","body","concat","apply","ref","onUpdate","bind","matchRouteRegistrations","routeRegistrations","url","route","routeMatch","tokenizedPath","regexp","exec","params","paramNames","groups","j","group","request","handler","tokenizePath","path","paramNameRegexp","RegExp","newRegExp","matches","domImpl","api","get","match","location","pathname","getRouteRegistrations","joinClassNames","classes","map","c","trim","camelToKebabCase","str","split","v","getCssAsText","key","helperEl","documentStyle","cssText","counterClassName","jss","result","other","styleKeys","sIndex","styleName","styleValue","createStyleNode","styleLines","classNamePrefix","instanceCounter","makeAnimation","animationName","newAnimationName","animationLines","KEY_FRAMES_KEY","keyFrame","index","makeFont","FONT_FACE_KEY","makeStyles","classProperty","classProperties","classNameKey","className"],"mappings":"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","file":"src.9f613ef8.js","sourceRoot":"../src","sourcesContent":["import { I$st } from 'springtype-types';\n\nexport const ST_KEY = '$st';\n\n// makes sure the global storage is not re-initialized\n// and overwritten on subsequent calls / file imports\n// istanbul ignore else\nif (!window[ST_KEY]) {\n  // register scoped global as an instance of this class\n  (window[ST_KEY] as any) = {\n    state: {},\n  };\n}\n\nexport const st: I$st = window[ST_KEY];\n","import { IVirtualChild, IVirtualChildren, IVirtualNode, IVirtualNodeType, Ref } from 'springtype-types';\n\n// If a JSX comment is written, it looks like: { /* this */ }\n// Therefore, it turns into: {}, which is detected here\nconst isJSXComment = (node: IVirtualNode): boolean =>\n  // istanbul ignore next\n  node && typeof node === 'object' && !node.attributes && !node.type && !node.children;\n\n// Filters comments and undefines like: ['a', 'b', false, {}] to: ['a', 'b', false]\nconst filterComments = (children: Array<IVirtualNode> | Array<IVirtualChild>) =>\n  children.filter((child: IVirtualChild) => !isJSXComment(child as IVirtualNode));\n\nconst onUpdateFn = function (this: Ref, callback: Function) {\n  this.update = callback as any;\n};\n\nexport const tsx = (\n  // if it is a function, it is a component\n  type: IVirtualNodeType | Function | any,\n  attributes: (JSX.HTMLAttributes & JSX.SVGAttributes & Record<string, any>) | null,\n  ...children: Array<IVirtualChildren> | IVirtualChildren\n): Array<IVirtualNode> | IVirtualNode => {\n  children = filterComments(\n    // Implementation to flatten virtual node children structures like:\n    // [<p>1</p>, [<p>2</p>,<p>3</p>]] to: [<p>1</p>,<p>2</p>,<p>3</p>]\n    ([] as Array<IVirtualChildren>).concat.apply([], children as any) as Array<IVirtualChildren>,\n  );\n\n  // clone attributes as well\n  attributes = { ...attributes };\n\n  // effectively unwrap by directly returning the children\n  if (type === 'fragment') {\n    return filterComments(children) as Array<IVirtualNode>;\n  }\n\n  // it's a component, divide and conquer children\n  if (typeof type === 'function') {\n    if (attributes.ref) {\n      // references an onUpdate assignment function to be called inside of the functional component\n      // to register an \"update\" function that can be called from the outside (ref.current.update(state?))\n      (attributes.ref as Ref)!.onUpdate = onUpdateFn.bind(attributes.ref as Ref) as any;\n    }\n\n    return type({\n      children,\n      ...attributes,\n    });\n  }\n\n  // @ts-ignore as type allows for Function here, but internally we wouldn't\n  // want to deal with Function, only \"string\". However, in this method it is indeed possible\n  return {\n    type,\n    attributes: attributes as any,\n    children,\n  };\n};\n","import { IElement, IVirtualChildren, IVirtualNode, IVirtualNodeAttributes } from 'springtype-types';\nimport { st, ST_KEY } from '../st/st';\n\nconst CLASS_ATTRIBUTE_NAME = 'class';\nconst XLINK_ATTRIBUTE_NAME = 'xlink';\nconst REF_ATTRIBUTE_NAME = 'ref';\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// istanbul ignore else\nif (!st.dom) {\n  // DOM abstraction layer for manipulation\n  st.dom = {\n    hasElNamespace: (domElement: Element): boolean => domElement.namespaceURI === SVG_NAMESPACE,\n\n    hasSvgNamespace: (parentElement: Element, type: string): boolean =>\n      st.dom.hasElNamespace(parentElement) && type !== 'STYLE' && type !== 'SCRIPT',\n\n    createElementOrElements: (\n      virtualNode: IVirtualNode | undefined | Array<IVirtualNode | undefined | string>,\n      parentDomElement?: IElement,\n    ): Array<IElement | Text | undefined> | IElement | Text | undefined => {\n      if (Array.isArray(virtualNode)) {\n        return st.dom.createChildElements(virtualNode, parentDomElement);\n      }\n      if (typeof virtualNode !== 'undefined') {\n        return st.dom.createElement(virtualNode as IVirtualNode | undefined, parentDomElement);\n      }\n      // undefined virtualNode -> e.g. when a tsx variable is used in markup which is undefined\n      return st.dom.createTextNode('', parentDomElement);\n    },\n\n    createElement: (virtualNode: IVirtualNode, parentDomElement?: IElement): IElement | undefined => {\n      let newEl: Element;\n\n      if (\n        virtualNode.type.toUpperCase() === 'SVG' ||\n        (parentDomElement && st.dom.hasSvgNamespace(parentDomElement, virtualNode.type.toUpperCase()))\n      ) {\n        newEl = document.createElementNS(SVG_NAMESPACE, virtualNode.type as string);\n      } else {\n        newEl = document.createElement(virtualNode.type as string);\n      }\n\n      // reference SpringType as a reference to every element created\n      // this allows microframework addition libs like st-query to re-use this instance\n      // with the correct domImpl the element belongs to\n      (newEl as any)[ST_KEY] = st;\n\n      // istanbul ignore else\n      if (virtualNode.attributes) {\n        st.dom.setAttributes(virtualNode.attributes, newEl);\n      }\n\n      // istanbul ignore else\n      if (virtualNode.children) {\n        st.dom.createChildElements(virtualNode.children, newEl);\n      }\n\n      // istanbul ignore else\n      if (parentDomElement) {\n        parentDomElement.appendChild(newEl);\n\n        // check for a lifecycle \"onMount\" hook and call it\n        if (typeof (newEl as any).$onMount === 'function') {\n          (newEl as any).$onMount!();\n        }\n      }\n      return newEl as IElement;\n    },\n\n    createTextNode: (text: string, domElement?: IElement): Text => {\n      const node = document.createTextNode(text.toString());\n\n      // istanbul ignore else\n      if (domElement) {\n        domElement.appendChild(node);\n      }\n      return node;\n    },\n\n    createChildElements: (\n      virtualChildren: IVirtualChildren,\n      domElement?: IElement,\n    ): Array<IElement | Text | undefined> => {\n      const children: Array<IElement | Text | undefined> = [];\n\n      for (let i = 0; i < virtualChildren.length; i++) {\n        const virtualChild = virtualChildren[i];\n        if (virtualChild === null || (typeof virtualChild !== 'object' && typeof virtualChild !== 'function')) {\n          children.push(\n            st.dom.createTextNode(\n              (typeof virtualChild === 'undefined' || virtualChild === null ? '' : virtualChild!).toString(),\n              domElement,\n            ),\n          );\n        } else {\n          children.push(st.dom.createElement(virtualChild as IVirtualNode, domElement));\n        }\n      }\n      return children;\n    },\n\n    setAttribute: (name: string, value: any, domElement: IElement) => {\n      // attributes not set (undefined) are ignored; use null value to reset an attributes state\n      if (typeof value === 'undefined') return;\n\n      // save ref as { current: DOMElement } in ref object\n      // allows for ref={someRef}\n      if (name === REF_ATTRIBUTE_NAME && typeof value !== 'function') {\n        value.current = domElement;\n      } else if (name === REF_ATTRIBUTE_NAME && typeof value === 'function') {\n        // allow for functional ref's like: render(<div ref={(el) => console.log('got el', el)} />)\n        value(domElement);\n      }\n\n      if (name.startsWith('on') && typeof value === 'function') {\n        let eventName = name.substring(2).toLowerCase();\n        const capturePos = eventName.indexOf('capture');\n        const doCapture = capturePos > -1;\n\n        if (eventName === 'mount') {\n          (domElement as any).$onMount = value;\n        }\n\n        // onClickCapture={...} support\n        if (doCapture) {\n          eventName = eventName.substring(0, capturePos);\n        }\n        domElement.addEventListener(eventName, value, doCapture);\n        return;\n      }\n\n      // transforms className=\"...\" -> class=\"...\"\n      // allows for React TSX to work seamlessly\n      if (name === 'className') {\n        name = CLASS_ATTRIBUTE_NAME;\n      }\n\n      // transforms class={['a', 'b']} into class=\"a b\"\n      if (name === CLASS_ATTRIBUTE_NAME && Array.isArray(value)) {\n        value = value.join(' ');\n      }\n\n      if (st.dom.hasElNamespace(domElement) && name.startsWith(XLINK_ATTRIBUTE_NAME)) {\n        // allows for <svg><use xlinkHref ...></svg>\n        domElement.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          `${XLINK_ATTRIBUTE_NAME}:${name.replace(XLINK_ATTRIBUTE_NAME, '')}`.toLowerCase(),\n          value,\n        );\n      } else if (name === 'style' && typeof value !== 'string') {\n        const propNames = Object.keys(value);\n\n        // allows for style={{ margin: 10 }} etc.\n        for (let i = 0; i < propNames.length; i++) {\n          domElement.style[propNames[i] as any] = value[propNames[i]];\n        }\n      } else if (typeof value === 'boolean') {\n        // for cases like <button checked={false} />\n        (domElement as any)[name] = value;\n      } else {\n        // for any other case\n        domElement.setAttribute(name, value);\n      }\n    },\n\n    setAttributes: (attributes: IVirtualNodeAttributes, domElement: IElement, forceNative?: boolean) => {\n      const attrNames = Object.keys(attributes);\n      for (let i = 0; i < attrNames.length; i++) {\n        st.dom.setAttribute(attrNames[i], attributes[attrNames[i]], domElement, forceNative);\n      }\n    },\n  };\n}\n","import { IElement, IVirtualNode } from 'springtype-types';\nimport { st } from '../st/st';\nimport './dom';\n\nexport const render = (st.render = (\n  virtualNode: IVirtualNode | undefined | string | Array<IVirtualNode | undefined | string>,\n  parentDomElement: IElement = document.body,\n): Array<IElement | Text | undefined> | IElement | Text | undefined => {\n  if (typeof virtualNode === 'string') {\n    return st.dom.createTextNode(virtualNode, parentDomElement);\n  }\n  return st.dom.createElementOrElements(virtualNode, parentDomElement);\n});\n","import { RouteParams } from './interface/RouteParams';\nimport { RouteRegistration } from './interface/RouteRegistration';\nimport { RouteRequest } from './interface/RouteRequest';\n\nexport const matchRouteRegistrations = (routeRegistrations: Array<RouteRegistration>, url: string) => {\n  let route = null;\n\n  for (let i = 0; (route = routeRegistrations[i]); i++) {\n    const routeMatch = route.tokenizedPath.regexp.exec(url);\n    if (!routeMatch) continue;\n\n    const params: RouteParams = {};\n    const paramNames = Object.keys(route.tokenizedPath.groups);\n\n    for (let j = 0; j < paramNames.length; j++) {\n      const group = route.tokenizedPath.groups[paramNames[j]];\n      params[paramNames[j].replace(':', '')] = routeMatch[group + 1];\n    }\n\n    const request: RouteRequest = {\n      url,\n      params,\n    };\n    route.handler(request);\n    return request;\n  }\n  return false;\n};\n","import { TokenizedPath } from './interface/TokenizedPath';\n\ninterface RouteMatchGroups {\n  [matchName: string]: number;\n}\n\nexport const tokenizePath = (path: string): TokenizedPath => {\n  const paramNameRegexp = new RegExp(':([^/.\\\\\\\\]+)', 'g');\n  const groups: RouteMatchGroups = {};\n\n  let newRegExp = path;\n  let matches: RegExpExecArray | null = null;\n  let i = 0;\n\n  while ((matches = paramNameRegexp.exec(path))) {\n    groups[matches[i]] = i++;\n    newRegExp = newRegExp.replace(matches[0], '([^/.\\\\\\\\]+)');\n  }\n  newRegExp += '$';\n\n  return {\n    groups,\n    regexp: new RegExp(newRegExp),\n  };\n};\n","import { API } from './interface/API';\nimport { RouteHandler } from './interface/RouteHandler';\nimport { RouteRegistration } from './interface/RouteRegistration';\nimport { matchRouteRegistrations } from './matchRouteRegistrations';\nimport { tokenizePath } from './tokenizePath';\n\nexport const route = (domImpl: Window = window): API => {\n  const routeRegistrations: Array<RouteRegistration> = [];\n\n  const api = {\n    tokenizePath,\n    get: (path: string, handler: RouteHandler) => {\n      routeRegistrations.push({\n        tokenizedPath: tokenizePath(path),\n        handler,\n      });\n      return api;\n    },\n    match: (path?: string) => matchRouteRegistrations(routeRegistrations, path || document.location.pathname),\n    getRouteRegistrations: () => routeRegistrations,\n  };\n\n  const listenForRouteChanges = () => {\n    // tested by TestCafé end-2-end smoke test\n    /* istanbul ignore next */\n    domImpl.addEventListener(\n      'popstate',\n      () => {\n        matchRouteRegistrations(routeRegistrations, document.location.pathname);\n      },\n      false,\n    );\n  };\n\n  // start listening for any route change,\n  // including inital ones (DOM load event)\n  listenForRouteChanges();\n\n  return api;\n};\n","import {route} from \"st-route\";\n\nexport const NAV = route();\n\nexport const MAIN_ROUTE = '/'\n\nexport const DOC_ROUTE = '/documentation'\n\nexport const GUIDES_ROUTE = '/guides'\n\nexport const LIBRARY_CORE_ROUTE = '/lib/core'\nexport const LIBRARY_ROUTER_ROUTE = '/lib/st-router'\nexport const LIBRARY_QUERY_ROUTE = '/lib/st-query'\nexport const LIBRARY_I18N_ROUTE = '/lib/st-i18n'\nexport const LIBRARY_JSS_ROUTE = '/lib/st-jss'\n","export interface RGB {\n    red: number;\n    green: number;\n    blue: number;\n}\n\nexport class Color {\n\n    rgb: RGB\n\n    constructor(rgb: string | RGB) {\n        if (typeof rgb === 'string') {\n            this.rgb = {\n                red: parseInt(rgb.slice(1, 3), 16),\n                green: parseInt(rgb.slice(3, 5), 16),\n                blue: parseInt(rgb.slice(5, 7), 16)\n            }\n            return;\n        }\n        if (typeof rgb === 'object'\n            && typeof rgb.red !== 'undefined'\n            && typeof rgb.green !== 'undefined'\n            && typeof rgb.blue !== 'undefined'\n        ) {\n            this.rgb = rgb;\n            return;\n        }\n        throw new Error('Unknown data type given to color object')\n    }\n\n    darker = (): Color => {\n        const amt = Math.round(-2.55 * 10);\n        return new Color({\n            red: this.rgb.red + amt,\n            green: this.rgb.green + amt,\n            blue: this.rgb.blue + amt,\n        })\n    }\n\n    lighter = (): Color => {\n        const amt = Math.round(2.55 * 10);\n        return new Color({\n            red: this.rgb.red + amt,\n            green: this.rgb.green + amt,\n            blue: this.rgb.blue + amt,\n        })\n    }\n\n    toRGBString = () => {\n        return `rgb(${this.rgb.red},${this.rgb.green},${this.rgb.blue})`\n    }\n}\n\n","import {Color, RGB} from \"../classes/Color\";\n\ninterface TColor {\n    main: string;\n    dark: string;\n    light: string;\n}\n\nconst hexToTColor = (rgb: string | RGB) => {\n    const color = new Color(rgb);\n    return {\n        main: color.toRGBString(),\n        dark: color.darker().toRGBString(),\n        light: color.lighter().toRGBString(),\n\n    }\n}\n\nexport const PRIMARY_COLOR: TColor = hexToTColor('#1a6da9');\n\nexport const FOOTER_COLOR: TColor = hexToTColor('#333333');\n\nexport const BACKGROUND_COLOR: TColor = hexToTColor('#F4F4F5');\n","export const joinClassNames = (classes: Array<string | number>) =>\n  classes\n    .map((c) => `${c}`.trim())\n    .filter((c) => !!c)\n    .join('-');\n","export const camelToKebabCase = (str: string): string =>\n  str\n    .split(/(?=[A-Z])/)\n    .filter((v) => !!v)\n    .join('-')\n    .toLowerCase();\n","import { camelToKebabCase } from './camelToKebabCase';\n\nexport const getCssAsText = (key: string, value: any) => {\n  const helperEl: any = document.createElement('div');\n  helperEl.style[key] = value;\n  const documentStyle = helperEl.style.cssText;\n  // dont work with :before content: \"\"\n  if (documentStyle !== '') {\n    return documentStyle;\n  }\n  return `${camelToKebabCase(key)}: ${value};`;\n};\n","import { JssProperties } from './interface/ClassProperties';\nimport { API } from './interface/API';\nimport { getCssAsText } from './function/getCssAsText';\n\nexport const render = (style: JssProperties, counterClassName: string, jss: API): Array<string> => {\n  let result: Array<string> = [];\n  const other: Array<string> = [];\n\n  const styleKeys = Object.keys(style);\n\n  for (let sIndex = 0; sIndex < styleKeys.length; sIndex++) {\n    const styleName = styleKeys[sIndex].trim();\n    const styleValue = (style as any)[styleName];\n\n    if (typeof styleValue !== 'object') {\n      result.push(getCssAsText(styleName, styleValue));\n    }\n\n    if (typeof styleValue === 'object') {\n      if (styleName.indexOf('@') === 0) {\n        other.push(`${styleName} {`, ...render(styleValue, counterClassName, jss), '}');\n      } else {\n        other.push(...render(styleValue, counterClassName + styleName, jss));\n      }\n    }\n  }\n\n  if (result.length !== 0) {\n    result = [`.${counterClassName} {`, ...result, '}'];\n  }\n\n  result.push(...other);\n\n  return result;\n};\n","import { IVirtualNode } from 'springtype-types';\nimport { LINEBREAK } from './constant';\n\nexport const createStyleNode = (styleLines: Array<string>): IVirtualNode => ({\n  type: 'style',\n  attributes: {\n    type: 'text/css',\n  },\n  children: [styleLines.join(LINEBREAK)],\n});\n","export const KEY_FRAMES_KEY = '@keyframes';\nexport const FONT_FACE_KEY = '@font-face';\nexport const LINEBREAK = '\\n';\n","import { FontFaceProperties, KeyFrameProperties } from 'springtype-types';\nimport { API } from './interface/API';\nimport { ClassProperty } from './interface/ClassProperties';\nimport { makeStyles } from './makeStyles';\nimport { makeFont } from './makeFont';\nimport { makeAnimation } from './makeAnimation';\n\nexport const jss: API = {\n  classNamePrefix: 'st',\n  instanceCounter: 0,\n  makeAnimation: (animationName: string, style: Partial<KeyFrameProperties>) =>\n    makeAnimation(animationName, style, jss),\n  makeFont: (style: FontFaceProperties) => makeFont(style),\n  makeStyles: <T extends string = string>(classProperty: ClassProperty<T>) => makeStyles<T>(classProperty, jss),\n};\n","import { IVirtualNode, KeyFrameProperties } from 'springtype-types';\nimport { API } from './interface/API';\nimport { getCssAsText } from './function/getCssAsText';\nimport { KEY_FRAMES_KEY } from './constant';\nimport { joinClassNames } from './function/joinClassNames';\nimport { createStyleNode } from './createStyleNode';\n\nexport const makeAnimation = (\n  animationName: string,\n  style: Partial<KeyFrameProperties>,\n  jss: API,\n): [string, IVirtualNode] => {\n  const newAnimationName = joinClassNames([jss.classNamePrefix, animationName, ++jss.instanceCounter]);\n  const animationLines = [`${KEY_FRAMES_KEY} ${newAnimationName}{`];\n  const styleKeys = Object.keys(style);\n\n  for (let sIndex = 0; sIndex < styleKeys.length; sIndex++) {\n    const styleName = styleKeys[sIndex].trim();\n    const styleValue = (style as any)[styleName];\n\n    const keyFrame = Object.keys(styleValue);\n    animationLines.push(`${styleName} {`);\n    for (let index = 0; index < keyFrame.length; index++) {\n      const name = keyFrame[index];\n      animationLines.push(getCssAsText(name, styleValue[name]));\n    }\n    animationLines.push('}');\n  }\n  animationLines.push('}');\n  return [newAnimationName, createStyleNode(animationLines)];\n};\n","import { FontFaceProperties, IVirtualNode } from 'springtype-types';\nimport { camelToKebabCase } from './function/camelToKebabCase';\nimport { FONT_FACE_KEY } from './constant';\nimport { createStyleNode } from './createStyleNode';\n\nexport const makeFont = (style: FontFaceProperties): IVirtualNode => {\n  const styleLines = [`${FONT_FACE_KEY} {`];\n  const styleKeys = Object.keys(style);\n\n  for (let sIndex = 0; sIndex < styleKeys.length; sIndex++) {\n    const styleName = styleKeys[sIndex].trim();\n    const styleValue = (style as any)[styleName];\n    styleLines.push(`${camelToKebabCase(styleName)}: ${styleValue}`);\n  }\n  styleLines.push('}');\n\n  return createStyleNode(styleLines);\n};\n","import { IVirtualNode } from 'springtype-types';\nimport { ClassProperty } from './interface/ClassProperties';\nimport { API } from './interface/API';\nimport { LINEBREAK } from './constant';\nimport { joinClassNames } from './function/joinClassNames';\nimport { render } from './render';\nimport { createStyleNode } from './createStyleNode';\n\nexport const makeStyles = <T extends string = string>(\n  classProperties: ClassProperty<T>,\n  jss: API,\n): [Record<T, string>, IVirtualNode] => {\n  const styleLines: Array<string> = [];\n  const classes: any = {};\n\n  const classNameKey = Object.keys(classProperties);\n  for (let index = 0; index < classNameKey.length; index++) {\n    const className = classNameKey[index];\n    const counterClassName = joinClassNames([jss.classNamePrefix, className, ++jss.instanceCounter]);\n\n    classes[className] = counterClassName;\n    const result = render((classProperties as any)[className], counterClassName, jss);\n    // collect all css parts\n    styleLines.push(result.join(LINEBREAK));\n  }\n  return [classes, createStyleNode(styleLines)];\n};\n","import {jss} from \"st-jss\";\nimport {ClassProperty} from \"st-jss/interface/ClassProperties\";\n\nexport const makeStyles = <T extends string = string>(classProperty: ClassProperty<T>): Record<T, string> => {\n    const [classes, style] = jss.makeStyles(classProperty)\n    window.$st.render(style,document.head)\n    return classes;\n\n}\n","import {IVirtualNode, tsx} from \"springtype\";\nimport {jss} from \"st-jss\";\nimport {makeStyles} from \"../../function/makeStyles\";\n\nexport interface TopBarButtonProps {\n    startIcon?: IVirtualNode;\n    endIcon?: IVirtualNode;\n    onClick?: ()=> void;\n    children?: IVirtualNode;\n    href?: string;\n}\nconst classes = makeStyles({\n    root: {\n        display: 'flex',\n        paddingLeft: 15,\n        paddingRight: 15,\n        fontSize: 18,\n        lineHeight: '60px',\n        paddingTop: 5,\n        textDecoration: 'none',\n        color: '#fff',\n        paddingBottom: 5,\n        cursor: 'pointer'\n    }\n});\n\nexport const Button = ({onClick, children, startIcon, endIcon}: TopBarButtonProps) => {\n    return <a onClick={onClick} class={classes.root}>\n        {startIcon}\n        {children}\n        {endIcon}\n        </a>\n}\n","import {API} from \"./interface/API\";\n\nexport const push = (url: string, state: any, history: API) => {\n    history.history.pushState(state, null, url);\n}\n","import {API} from \"./interface/API\";\n\nexport const replace = (url: string, state: any, history: API) => {\n    history.history.replaceState(state, null, url);\n}\n","import {API} from \"./interface/API\";\n\nexport const back = (history: API) => {\n    history.history.back();\n}\n","import {API} from \"./interface/API\";\n\nexport const forward = (history: API) => {\n    history.history.forward();\n}\n","import {API} from \"./interface/API\";\nimport {push} from \"./push\";\nimport {replace} from \"./replace\";\nimport {back} from \"./back\";\nimport {forward} from \"./forward\";\n\n//wrap push state to trigger change and push state event\nwindow.history.pushState = ( f => function pushState(){\n    const ret = f.apply(this, arguments);\n    window.dispatchEvent(new Event('pushstate'));\n    window.dispatchEvent(new Event('locationchange'));\n    return ret;\n})(window.history.pushState);\n\n//wrap replace to trigger change and replace state event\nwindow.history.replaceState = ( f => function replaceState(){\n    const ret = f.apply(this, arguments);\n    window.dispatchEvent(new Event('replacestate'));\n    window.dispatchEvent(new Event('locationchange'));\n    return ret;\n})(window.history.replaceState);\n\n//wrap pop state to trigger change event\nwindow.addEventListener('popstate',()=>{\n    window.dispatchEvent(new Event('locationchange'))\n});\n\nexport const history : API = {\n    history: window.history,\n    push: (url, state) => push(url, state, history),\n    replace: (url, state) => replace(url, state, history),\n    back: ()=> back(history),\n    forward: ()=> forward(history),\n}\n","import {history} from \"../router/history\";\nimport logoWhite from \"../assets/img/logo_inverted.svg\";\nimport {tsx} from \"springtype\";\nimport {jss} from \"st-jss\";\n\n\nexport const Logo = () => {\n    const [classes, style] = jss.makeStyles({\n        root: {\n            flex: 1,\n            display: 'flex',\n            cursor: 'pointer'\n        },\n        text:{\n            fontSize: 30,\n            paddingTop: 15,\n            paddingLeft: 5\n        }\n\n    })\n    return (\n        <div class={classes.root} onClick={() => history.replace('/')}>\n            {style}\n            <img src={logoWhite} width={45} alt={\"logo springtype\"}/>\n            <div class={classes.text}>springtype</div>\n        </div>\n\n    )\n}\n","import {IVirtualNode, Ref, tsx} from \"springtype\";\nimport {jss} from \"st-jss\";\nimport {Button} from \"./Button\";\n\nexport interface TopBarDropDownButtonProps {\n    label: IVirtualNode | string;\n    children?: IVirtualNode;\n}\n\nexport const Dropdown = ({label, children}: TopBarDropDownButtonProps) => {\n    const containerRef: Ref = {}\n\n    const [classes, style] = jss.makeStyles({\n        hide: {display: 'none'},\n        dropdown: {\n            position: 'absolute',\n            overflow: 'auto',\n            zIndex: 1,\n        }\n    });\n\n    return <div>\n        {style}\n        <Button\n            onClick={() => {\n                containerRef.current.classList.toggle(classes.hide)\n            }}\n            endIcon={<svg xmlns=\"http://www.w3.org/2000/svg\" style={{width: 20, height: 60}}\n                          viewBox=\"0 0 1792 1792\"\n                          class=\"icon\">\n                <path fill={'#fff'}\n                      d=\"M1408 704q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"/>\n            </svg>\n            }\n        >\n            {label}\n        </Button>\n        <div ref={containerRef} class={classes.hide}>\n            <div class={[classes.dropdown]}>\n                {children}\n            </div>\n        </div>\n    </div>\n}\n","import { IVirtualNode } from \"springtype\";\n\nexport const Children = {\n    join: (nodes: IVirtualNode | string | Array<IVirtualNode | string>, join: IVirtualNode | string ) => {\n        if(Array.isArray(nodes)){\n            const length = nodes.length;\n            const result: Array<IVirtualNode | string> = [];\n             nodes.forEach((node, index)=> {\n                 result.push(node);\n                 if(  index < length-1){\n                     result.push(join)\n                 }\n             })\n            return result;\n        }else{\n            return nodes;\n        }\n    }\n}\n","import {IVirtualNode, tsx} from \"springtype\";\nimport {jss} from \"st-jss\";\nimport {Children} from \"../../function/Children\";\nimport {makeStyles} from \"../../function/makeStyles\";\n\nexport interface MenuProps {\n    children?: Array<IVirtualNode>;\n}\nconst classes = makeStyles({\n    root: {\n        padding: '1.5rem',\n        backgroundColor: 'white',\n        color: 'black',\n        borderRadius: '8px',\n        boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\n    }\n});\nexport const Menu = ({children}: MenuProps) => {\n    return (\n        <div class={classes.root}>\n            {Children.join(children,<div style={{marginBottom: 15}}/>)}\n        </div>\n    )\n}\n","import {IVirtualNode, tsx} from \"springtype\";\n\nexport interface MenuItemProps {\n    title: IVirtualNode | string;\n    subTitle: IVirtualNode | string;\n    onClick: () => void;\n}\n\n\nexport const MenuItem = ({title, subTitle, onClick}: MenuItemProps) => {\n    return (\n        <div style={{ cursor: 'pointer'}} onclick={onClick}>\n            <div style={{fontWeight: 'bolder', fontSize: 18}}>{title}</div>\n            <div style={{fontSize: 14, color: 'rgb(103, 103, 103)'}}>{subTitle}</div>\n        </div>\n    )\n}\n","import {IVirtualNode, tsx} from \"springtype\";\nimport waveSvg from '../../assets/img/wave.svg'\nimport {PRIMARY_COLOR} from \"../../function/Theme\";\nimport logoGithub from \"../../assets/img/github_logo.svg\"\nimport {Button} from \"./Button\";\nimport {history} from \"../../router/history\";\nimport {\n    DOC_ROUTE,\n    GUIDES_ROUTE,\n    LIBRARY_CORE_ROUTE,\n    LIBRARY_I18N_ROUTE,\n    LIBRARY_JSS_ROUTE,\n    LIBRARY_QUERY_ROUTE,\n    LIBRARY_ROUTER_ROUTE\n} from \"../../routes\";\nimport {Logo} from \"../Logo\";\nimport {Dropdown} from \"./Dropdown\";\nimport {Menu} from \"./Menu\";\nimport {MenuItem} from \"./MenuItem\";\nimport {makeStyles} from \"../../function/makeStyles\";\n\nexport interface TopBarProps {\n    classes?: string;\n    children?: IVirtualNode;\n}\n\nconst ownClasses = makeStyles({\n    waveBackground: {\n        background: `linear-gradient(180deg ,rgba(33,119,194,.4),rgba(33,119,194,.4)),\n            linear-gradient(20deg, rgba(16,63,105,.09) 35%,transparent 0),\n            linear-gradient(160deg, rgba(16,63,105,.09) 50%,transparent 0),\n            linear-gradient(130deg, rgba(16,63,105,.09) 45%,transparent 0),\n            linear-gradient(50deg, rgba(16,63,105,.09) 90%,transparent 0),\n            linear-gradient(180deg, ${PRIMARY_COLOR.main},${PRIMARY_COLOR.main})`,\n        backgroundBlendMode: 'screen,normal,normal,normal,normal,normal',\n        backgroundSize: '100% max(700px,100%)',\n        position: 'relative',\n        zIndex: 1,\n        paddingBottom: 150,\n        ':before': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            height: '75px',\n            backgroundImage: \"url(\" + waveSvg + \")\",\n            width: '100%',\n            zIndex: -1,\n            backgroundSize: '1200px 75px',\n            backgroundRepeat: 'repeat-x',\n            backgroundPosition: 'bottom',\n        },\n\n    },\n    container: {\n        color: '#fff'\n    }\n})\nexport const TopBar = ({classes, children}: TopBarProps) => {\n\n    return <div className={ownClasses.waveBackground}>\n        <div className={[ownClasses.container, classes]}>\n            <div style={{display: 'flex'}}>\n                <Logo/>\n                <Dropdown label={\"Library\"}>\n                    <Menu>\n                        <MenuItem\n                            title={\"springtype\"}\n                            subTitle={\"The core framework livecycle\"}\n                            onClick={() => history.push(LIBRARY_CORE_ROUTE)}\n                        />\n                        <MenuItem\n                            title={\"st-router\"}\n                            subTitle={\"The router library\"}\n                            onClick={() => history.push(LIBRARY_ROUTER_ROUTE)}\n                        />\n                        <MenuItem\n                            title={\"st-query\"}\n                            subTitle={\"An library like jQuery\"}\n                            onClick={() => history.push(LIBRARY_QUERY_ROUTE)}\n                        />\n                        <MenuItem\n                            title={\"st-jss\"}\n                            subTitle={\"Scoped css classes animations\"}\n                            onClick={() => history.push(LIBRARY_JSS_ROUTE)}\n                        />\n                        <MenuItem\n                            title={\"st-i18n\"}\n                            subTitle={\"Translate you application\"}\n                            onClick={() => history.push(LIBRARY_I18N_ROUTE)}\n                        />\n                    </Menu>\n                </Dropdown>\n                <Button onClick={() => {\n                    history.push(GUIDES_ROUTE)\n                }}>\n                    Guides\n                </Button>\n                <Button onClick={() => {\n                    history.push(DOC_ROUTE)\n                }}>\n                    Documentation\n                </Button>\n                <Button onClick={() => {\n                    window.open('https://github.com/springtype-org')\n                }} startIcon={<img width={30} height={60} src={logoGithub} alt={'logo github'}\n                                   style={{marginRight: 5}}/>}>\n                    Follow us on GitHub\n                </Button>\n\n            </div>\n            {children}\n        </div>\n    </div>\n}\n","import {tsx} from \"springtype\";\nimport {FOOTER_COLOR} from \"../function/Theme\";\nexport interface FooterProps {\n    classes?: string\n}\nexport const Footer = ({classes}: FooterProps) => {\n\n    const user: Array<{ name: string, imgSrc: string, url: string }> = [{\n        name: 'Aron Homberg',\n        imgSrc: 'https://avatars3.githubusercontent.com/u/454817?v=4&s=150',\n        url: 'https://github.com/kyr0'\n    }, {\n        name: 'Michael Mannseicher',\n        imgSrc: 'https://avatars2.githubusercontent.com/u/12079044?s=150&v=4',\n        url:'https://github.com/mansi1'\n    }, {\n        name: 'Tom',\n        imgSrc: 'https://avatars2.githubusercontent.com/u/17221813?s=150&v=4',\n        url: 'https://github.com/jsdevtom'\n    }]\n\n    return <div style={{\n        backgroundColor: FOOTER_COLOR.main,\n        color: 'white',\n    }}>\n        <div class={classes} style={{\n            backgroundColor: FOOTER_COLOR.light,\n        }}>\n                <div style={{fontSize: 18, textTransform: 'uppercase'}}>\n                    Supporter\n                </div>\n                <div style={{display: 'flex'}}>\n\n                    {user.map(({name, imgSrc}) => (<div style={{margin: 5}}>\n                        <div><img\n                            style={{\n                                borderRadius: '70px',\n                                width: 50,\n                                height: 50,\n                                filter: 'grayscale(70%)',\n                            }}\n                            onClick={() => window.open(imgSrc)}\n                            src={imgSrc}\n                            alt={`profile image of ${name}`}/></div>\n                    </div>))}\n                </div>\n            </div>\n    </div>\n}\n","import {tsx} from \"springtype\";\nimport {TopBar} from \"../component/topbar/TopBar\";\nimport {Footer} from \"../component/Footer\";\nimport {makeStyles} from \"../function/makeStyles\";\n\nconst classes = makeStyles({\n    mainContainer: {\n        padding: '1.25rem',\n        '@media (min-width: 1024px)': {\n            paddingLeft: 'max(3rem,calc(50vw - 640px + 3rem))',\n            paddingRight: 'max(3rem,calc(50vw - 640px + 3rem))',\n        },\n        '@media (min-width: 640px)': {\n            paddingLeft: 'max(1.5rem,calc(50vw - 640px + 1.5rem))',\n            paddingRight: 'max(1.5rem,calc(50vw - 640px + 1.5rem))',\n        },\n    },\n    children: {\n        flex: 1\n    }\n})\nexport const MainPage = () => {\n    return <fragment>\n        <TopBar classes={classes.mainContainer}>\n            <div style={{marginTop: 45}}>\n                <div style={{fontSize: 30}}>The best and easiest to</div>\n                <div style={{fontSize: 60, fontWeight: 'bolder', textTransform: 'uppercase'}}>build websites</div>\n                <div>Build websites with known webtechnologie:</div>\n                <ul>\n                    <li>Use browser build in dom api</li>\n                    <li>Use typescript with tsx</li>\n                    <li>Use simple css</li>\n                    <li>Easy integrate third party libraries.</li>\n                </ul>\n            </div>\n        </TopBar>\n        <div class={[classes.mainContainer, classes.children]}>\n            \"content\"\n        </div>\n        <Footer classes={classes.mainContainer}/>\n    </fragment>\n}\n","import {Ref, tsx} from 'springtype';\nimport {DOC_ROUTE, GUIDES_ROUTE, MAIN_ROUTE, NAV} from \"./routes\";\nimport {MainPage} from \"./page/MainPage\";\n\nexport interface RouteListProps {\n    className: string;\n}\nexport const RouteList = ({className}: RouteListProps) => {\n\n    const containerRef: Ref = {}\n\n    NAV.get(MAIN_ROUTE, () => {\n        containerRef.current.innerHTML = ''\n        containerRef.current['$st'].render(<MainPage/>, containerRef.current)\n    });\n\n    NAV.get(DOC_ROUTE, () => {\n        containerRef.current.innerHTML = ''\n        containerRef.current['$st'].render(<fragment />, containerRef.current)\n    });\n\n    NAV.get(GUIDES_ROUTE, () => {\n        containerRef.current.innerHTML = ''\n        containerRef.current['$st'].render(<fragment />, containerRef.current)\n    });\n\n    const onMount = () => {\n        NAV.match(location.search)\n    }\n    const onLocationChange = () => {\n        NAV.match(location.search)\n    }\n\n    //rerender if location change\n    window.addEventListener('locationchange', onLocationChange)\n\n    return <div class={className} ref={containerRef} onMount={onMount}>\n        Loading...\n    </div>;\n};\n","import {render, tsx} from \"springtype\";\nimport {RouteList} from \"./RouteList\";\nimport {BACKGROUND_COLOR} from \"./function/Theme\";\nimport {jss} from \"st-jss\";\nimport {makeStyles} from \"./function/makeStyles\";\n\nconst classes = makeStyles({\n    body: {\n        margin: 0,\n        padding: 0,\n        backgroundColor: BACKGROUND_COLOR.main,\n        fontFamily: '\\'Raleway\\', sans-serif'\n    },\n    router: {\n        display: 'flex',\n        height: '100%',\n        flexDirection: 'column'\n    }\n});\nconst App = () => {\n\n\n    //add font and style to body\n    const bodyEl = document.getElementById('body');\n    bodyEl.classList.add(classes.body)\n\n    return <fragment>\n        <RouteList className={classes.router}/>\n    </fragment>\n}\n\nrender(<App/>);\n"]}